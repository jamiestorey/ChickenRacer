<?xml version="1.0"?>
<doc>
<assembly>
<name>
MyRaceGame
</name>
</assembly>
<members>
<member name="M:MyRaceGame.Player.initialiseBanks">
	<summary>
 Sets the players default bank balance and initialises each PlayerBank Variables.
 </summary>
</member><member name="M:MyRaceGame.Player.Bankrupt">
	<summary>
 Checks each players bank balance. If they're bankrupt then disable their controls.
 </summary>
</member><member name="M:MyRaceGame.Player.isBettingEnabled">
	<summary>
 Checks each players bank balance. If a players balance is less than or equal to 0 then disable the players betting textbox, else enable them.
 </summary>
</member><member name="M:MyRaceGame.Player.NoMoreBets">
	<summary>
 If a race is in progress then disable the betting textboxes and 
 disables the start race and reset buttons.
 </summary>
</member><member name="M:MyRaceGame.Player.ResetPlayerLocation">
	<summary>
 Initialises each players default Position and then sets the players location to those Positions.
 </summary>
</member><member name="M:MyRaceGame.Player.ResetEverything">
	<summary>
 Resets player locations, bank balances, race wins and also enables player controls if they were bankrupt.
 </summary>
</member><member name="M:MyRaceGame.Player.EnablePlayers">
	<summary>
 Used to enable all Player Controls if they were disabled.
 </summary>
</member><member name="M:MyRaceGame.Player.ResetWins">
	<summary>
 Resets all race win variables to 0.
 </summary>
</member><member name="M:MyRaceGame.Player.SetOdds">
	<summary>
 Sets the Odds of each player using random numbers.
 </summary>
</member><member name="M:MyRaceGame.Player.ResetGuesses">
	<summary>
 Resets each players guess for the double money mini game.
 </summary>
</member><member name="P:MyRaceGame.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:MyRaceGame.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:MyRaceGame.My.Resources.Resources.BlueChicken128">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:MyRaceGame.My.Resources.Resources.GreenChicken128">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:MyRaceGame.My.Resources.Resources.RedChicken128">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:MyRaceGame.My.Resources.Resources.YellowChicken128">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:MyRaceGame.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:MyRaceGame.RaceLogic.CheckRaceConditions">
	<summary>
 Makes each race random. Assings player name variables equal to Player label text.
 Calls a Sub Routine that checks if the race can start.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.CanRaceStart">
	<summary>
 Checks to see if the race can start. Checks if each Player bet textBox contains a value.
 Calls 3 other subs that check other conditions before the race can start.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.CanAffordBet">
	<summary>
 Checks the value of Each Player Bet from the bet textboxes. If a player bet is greater than the amount
 in their bank then display a message box informing the player they can't afford the bet. Also sets 
 each PlayerStart boolean to true if their bet amount is lower or equal to the amount in their bank.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.PlayersReady">
	<summary>
 Checks each PlayerStart boolean value. If all equal true then set raceCanStart boolean value to true.
 If not all values equal true then display a message box informing that not all players are ready.
 The raceCanStartBoolean is used to start the race.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.DisableOptions">
	<summary>
 Checks if the amount of races needed to win is less than the number of races that
 have took place. If true then disables the radio buttons that change the number of races
 needed to win. If not then enable the radio buttons so the user can change the value.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.CheckWinAmount">
	<summary>
 Checks each GamesToWin radio button and changes the gamesToWin variable accordingly.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.BeginRace">
	<summary>
 Begins the race only if the raceCanStart boolean value equals true.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.GamesWon">
	<summary>
 Checks to see if the amount of races won is equal to the number of races needed to win overall.
 Checks if each players win count is higher than the other players.
 Displays a messagebox informing players which player won.
 If no players won then it was a tie and shows players how many wins each player achieved.
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.AfterWin">
	<summary>
 The Sub Routine that is called when a player wins a race.
 Calls various Sub Routines that check if players are bankrupt, sets players odds,
 Resets Players locations for the next race and checks if players have raced the 
 amount of races specified from the BestOf X radio buttons
 </summary>
</member><member name="M:MyRaceGame.RaceLogic.RaceRunning">
	<summary>
 This is the Sub Routine that contains the logic while a race is in progress.
 It should be called in the tmrGameSpeed_Tick Event
 It sets the players position on screen and moves each player randomly.
 It also checks if a player has crossed the finished line and if so declares
 that player the winner and then updates the labels that display race win info.
 </summary>
</member>
</members>
</doc>